apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ include "blog.fullname" . }}
  labels:
    {{- include "blog.labels" . | nindent 4 }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "blog.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "blog.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backendImage.repository }}:{{ .Values.backendImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backendImage.pullPolicy }}
          stdin: true
          tty: true
          ports:
            - name: { { .Values.service.backend.internalPortName } }
              containerPort: { { .Values.service.backend.internalPort } }
              protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - name: {{ .Chart.Name }}-frontend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.frontendImage.repository }}:{{ .Values.frontendImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontendImage.pullPolicy }}
          stdin: true
          tty: true
          ports:
            - name: { { .Values.service.frontend.internalPortName } }
              containerPort: { { .Values.service.frontend.internalPort } }
              protocol: TCP 
          livenessProbe:
            httpGet:
              path: /
              port: { { .Values.service.frontend.internalPortName } }
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: { { .Values.service.frontend.internalPortName } }
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi